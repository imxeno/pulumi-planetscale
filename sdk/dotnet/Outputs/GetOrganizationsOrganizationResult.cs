// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Planetscale.Outputs
{

    [OutputType]
    public sealed class GetOrganizationsOrganizationResult
    {
        /// <summary>
        /// The billing email of the organization.
        /// </summary>
        public readonly string BillingEmail;
        /// <summary>
        /// When the organization was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The number of databases in the organization.
        /// </summary>
        public readonly double DatabaseCount;
        /// <summary>
        /// Features that are enabled on the organization.
        /// </summary>
        public readonly Outputs.GetOrganizationsOrganizationFeaturesResult Features;
        /// <summary>
        /// .
        /// </summary>
        public readonly Outputs.GetOrganizationsOrganizationFlagsResult Flags;
        /// <summary>
        /// Whether or not the organization has past due billing invoices.
        /// </summary>
        public readonly bool HasPastDueInvoices;
        /// <summary>
        /// The ID for the organization.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not the IdP provider is be responsible for managing roles in PlanetScale.
        /// </summary>
        public readonly bool IdpManagedRoles;
        /// <summary>
        /// The name of the organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The billing plan of the organization.
        /// </summary>
        public readonly string Plan;
        /// <summary>
        /// Whether or not the organization has single tenancy enabled.
        /// </summary>
        public readonly bool SingleTenancy;
        /// <summary>
        /// The number of sleeping databases in the organization.
        /// </summary>
        public readonly double SleepingDatabaseCount;
        /// <summary>
        /// Whether or not SSO is enabled on the organization.
        /// </summary>
        public readonly bool Sso;
        /// <summary>
        /// Whether or not the organization uses a WorkOS directory.
        /// </summary>
        public readonly bool SsoDirectory;
        /// <summary>
        /// The URL of the organization's SSO portal.
        /// </summary>
        public readonly string SsoPortalUrl;
        /// <summary>
        /// When the organization was last updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Whether or not the organization's billing information is valid.
        /// </summary>
        public readonly bool ValidBillingInfo;

        [OutputConstructor]
        private GetOrganizationsOrganizationResult(
            string billingEmail,

            string createdAt,

            double databaseCount,

            Outputs.GetOrganizationsOrganizationFeaturesResult features,

            Outputs.GetOrganizationsOrganizationFlagsResult flags,

            bool hasPastDueInvoices,

            string id,

            bool idpManagedRoles,

            string name,

            string plan,

            bool singleTenancy,

            double sleepingDatabaseCount,

            bool sso,

            bool ssoDirectory,

            string ssoPortalUrl,

            string updatedAt,

            bool validBillingInfo)
        {
            BillingEmail = billingEmail;
            CreatedAt = createdAt;
            DatabaseCount = databaseCount;
            Features = features;
            Flags = flags;
            HasPastDueInvoices = hasPastDueInvoices;
            Id = id;
            IdpManagedRoles = idpManagedRoles;
            Name = name;
            Plan = plan;
            SingleTenancy = singleTenancy;
            SleepingDatabaseCount = sleepingDatabaseCount;
            Sso = sso;
            SsoDirectory = ssoDirectory;
            SsoPortalUrl = ssoPortalUrl;
            UpdatedAt = updatedAt;
            ValidBillingInfo = validBillingInfo;
        }
    }
}
