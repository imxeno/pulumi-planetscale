// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Planetscale.Outputs
{

    [OutputType]
    public sealed class GetBranchesBranchResult
    {
        /// <summary>
        /// The access host URL for the branch. This is a legacy field, use `mysql_edge_address`.
        /// </summary>
        public readonly string AccessHostUrl;
        /// <summary>
        /// The actor who created this branch.
        /// </summary>
        public readonly Outputs.GetBranchesBranchActorResult Actor;
        /// <summary>
        /// The SKU representing the branch's cluster size.
        /// </summary>
        public readonly string ClusterRateName;
        /// <summary>
        /// When the branch was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The database this branch belongs to.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Planetscale app URL for the branch.
        /// </summary>
        public readonly string HtmlUrl;
        /// <summary>
        /// The ID of the branch.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the backup from which the branch was restored.
        /// </summary>
        public readonly string InitialRestoreId;
        /// <summary>
        /// The MySQL address for the branch.
        /// </summary>
        public readonly string MysqlAddress;
        /// <summary>
        /// The address of the MySQL provider for the branch.
        /// </summary>
        public readonly string MysqlEdgeAddress;
        /// <summary>
        /// The name of the branch.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The organization this branch belongs to.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The name of the parent branch from which the branch was created.
        /// </summary>
        public readonly string ParentBranch;
        /// <summary>
        /// Whether or not the branch is a production branch.
        /// </summary>
        public readonly bool Production;
        /// <summary>
        /// Whether or not the branch is ready to serve queries.
        /// </summary>
        public readonly bool Ready;
        /// <summary>
        /// The region in which this branch lives.
        /// </summary>
        public readonly Outputs.GetBranchesBranchRegionResult Region;
        /// <summary>
        /// When a user last marked a backup restore checklist as completed.
        /// </summary>
        public readonly string RestoreChecklistCompletedAt;
        public readonly Outputs.GetBranchesBranchRestoredFromBranchResult RestoredFromBranch;
        /// <summary>
        /// When the schema for the branch was last updated.
        /// </summary>
        public readonly string SchemaLastUpdatedAt;
        /// <summary>
        /// The number of shards in the branch.
        /// </summary>
        public readonly double ShardCount;
        /// <summary>
        /// Whether or not the branch is sharded.
        /// </summary>
        public readonly bool Sharded;
        /// <summary>
        /// When the branch was last updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetBranchesBranchResult(
            string accessHostUrl,

            Outputs.GetBranchesBranchActorResult actor,

            string clusterRateName,

            string createdAt,

            string database,

            string htmlUrl,

            string id,

            string initialRestoreId,

            string mysqlAddress,

            string mysqlEdgeAddress,

            string name,

            string organization,

            string parentBranch,

            bool production,

            bool ready,

            Outputs.GetBranchesBranchRegionResult region,

            string restoreChecklistCompletedAt,

            Outputs.GetBranchesBranchRestoredFromBranchResult restoredFromBranch,

            string schemaLastUpdatedAt,

            double shardCount,

            bool sharded,

            string updatedAt)
        {
            AccessHostUrl = accessHostUrl;
            Actor = actor;
            ClusterRateName = clusterRateName;
            CreatedAt = createdAt;
            Database = database;
            HtmlUrl = htmlUrl;
            Id = id;
            InitialRestoreId = initialRestoreId;
            MysqlAddress = mysqlAddress;
            MysqlEdgeAddress = mysqlEdgeAddress;
            Name = name;
            Organization = organization;
            ParentBranch = parentBranch;
            Production = production;
            Ready = ready;
            Region = region;
            RestoreChecklistCompletedAt = restoreChecklistCompletedAt;
            RestoredFromBranch = restoredFromBranch;
            SchemaLastUpdatedAt = schemaLastUpdatedAt;
            ShardCount = shardCount;
            Sharded = sharded;
            UpdatedAt = updatedAt;
        }
    }
}
