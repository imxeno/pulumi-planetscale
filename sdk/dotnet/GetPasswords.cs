// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Planetscale
{
    public static class GetPasswords
    {
        /// <summary>
        /// A list of PlanetScale database passwords.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Planetscale = Pulumi.Planetscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Planetscale.GetPasswords.Invoke(new()
        ///     {
        ///         Organization = "example",
        ///         Database = "example_db",
        ///         Branch = "main",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["passwords"] = example,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPasswordsResult> InvokeAsync(GetPasswordsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPasswordsResult>("planetscale:index/getPasswords:getPasswords", args ?? new GetPasswordsArgs(), options.WithDefaults());

        /// <summary>
        /// A list of PlanetScale database passwords.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Planetscale = Pulumi.Planetscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Planetscale.GetPasswords.Invoke(new()
        ///     {
        ///         Organization = "example",
        ///         Database = "example_db",
        ///         Branch = "main",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["passwords"] = example,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPasswordsResult> Invoke(GetPasswordsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPasswordsResult>("planetscale:index/getPasswords:getPasswords", args ?? new GetPasswordsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A list of PlanetScale database passwords.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Planetscale = Pulumi.Planetscale;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Planetscale.GetPasswords.Invoke(new()
        ///     {
        ///         Organization = "example",
        ///         Database = "example_db",
        ///         Branch = "main",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["passwords"] = example,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPasswordsResult> Invoke(GetPasswordsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPasswordsResult>("planetscale:index/getPasswords:getPasswords", args ?? new GetPasswordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPasswordsArgs : global::Pulumi.InvokeArgs
    {
        [Input("branch", required: true)]
        public string Branch { get; set; } = null!;

        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        [Input("readOnlyRegionId")]
        public string? ReadOnlyRegionId { get; set; }

        public GetPasswordsArgs()
        {
        }
        public static new GetPasswordsArgs Empty => new GetPasswordsArgs();
    }

    public sealed class GetPasswordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("branch", required: true)]
        public Input<string> Branch { get; set; } = null!;

        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("readOnlyRegionId")]
        public Input<string>? ReadOnlyRegionId { get; set; }

        public GetPasswordsInvokeArgs()
        {
        }
        public static new GetPasswordsInvokeArgs Empty => new GetPasswordsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPasswordsResult
    {
        public readonly string Branch;
        public readonly string Database;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Organization;
        public readonly ImmutableArray<Outputs.GetPasswordsPasswordResult> Passwords;
        public readonly string? ReadOnlyRegionId;

        [OutputConstructor]
        private GetPasswordsResult(
            string branch,

            string database,

            string id,

            string organization,

            ImmutableArray<Outputs.GetPasswordsPasswordResult> passwords,

            string? readOnlyRegionId)
        {
            Branch = branch;
            Database = database;
            Id = id;
            Organization = organization;
            Passwords = passwords;
            ReadOnlyRegionId = readOnlyRegionId;
        }
    }
}
