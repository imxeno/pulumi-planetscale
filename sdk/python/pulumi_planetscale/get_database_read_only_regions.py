# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetDatabaseReadOnlyRegionsResult',
    'AwaitableGetDatabaseReadOnlyRegionsResult',
    'get_database_read_only_regions',
    'get_database_read_only_regions_output',
]

@pulumi.output_type
class GetDatabaseReadOnlyRegionsResult:
    """
    A collection of values returned by getDatabaseReadOnlyRegions.
    """
    def __init__(__self__, id=None, name=None, organization=None, regions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization and not isinstance(organization, str):
            raise TypeError("Expected argument 'organization' to be a str")
        pulumi.set(__self__, "organization", organization)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the database for which the read-only regions are available.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def organization(self) -> str:
        """
        The organization for which the read-only regions are available.
        """
        return pulumi.get(self, "organization")

    @property
    @pulumi.getter
    def regions(self) -> Sequence['outputs.GetDatabaseReadOnlyRegionsRegionResult']:
        """
        The list of read-only regions available for the database.
        """
        return pulumi.get(self, "regions")


class AwaitableGetDatabaseReadOnlyRegionsResult(GetDatabaseReadOnlyRegionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatabaseReadOnlyRegionsResult(
            id=self.id,
            name=self.name,
            organization=self.organization,
            regions=self.regions)


def get_database_read_only_regions(name: Optional[str] = None,
                                   organization: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDatabaseReadOnlyRegionsResult:
    """
    A list of PlanetScale read-only regions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_planetscale as planetscale

    example = planetscale.get_database_read_only_regions(organization="example.com",
        name="example_db")
    pulumi.export("databaseRoRegions", example_planetscale_database_regions)
    ```


    :param str name: The name of the database for which the read-only regions are available.
    :param str organization: The organization for which the read-only regions are available.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['organization'] = organization
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('planetscale:index/getDatabaseReadOnlyRegions:getDatabaseReadOnlyRegions', __args__, opts=opts, typ=GetDatabaseReadOnlyRegionsResult).value

    return AwaitableGetDatabaseReadOnlyRegionsResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        organization=pulumi.get(__ret__, 'organization'),
        regions=pulumi.get(__ret__, 'regions'))
def get_database_read_only_regions_output(name: Optional[pulumi.Input[str]] = None,
                                          organization: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDatabaseReadOnlyRegionsResult]:
    """
    A list of PlanetScale read-only regions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_planetscale as planetscale

    example = planetscale.get_database_read_only_regions(organization="example.com",
        name="example_db")
    pulumi.export("databaseRoRegions", example_planetscale_database_regions)
    ```


    :param str name: The name of the database for which the read-only regions are available.
    :param str organization: The organization for which the read-only regions are available.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['organization'] = organization
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('planetscale:index/getDatabaseReadOnlyRegions:getDatabaseReadOnlyRegions', __args__, opts=opts, typ=GetDatabaseReadOnlyRegionsResult)
    return __ret__.apply(lambda __response__: GetDatabaseReadOnlyRegionsResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        organization=pulumi.get(__response__, 'organization'),
        regions=pulumi.get(__response__, 'regions')))
