# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetOrganizationRegionsResult',
    'AwaitableGetOrganizationRegionsResult',
    'get_organization_regions',
    'get_organization_regions_output',
]

@pulumi.output_type
class GetOrganizationRegionsResult:
    """
    A collection of values returned by getOrganizationRegions.
    """
    def __init__(__self__, id=None, organization=None, regions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization and not isinstance(organization, str):
            raise TypeError("Expected argument 'organization' to be a str")
        pulumi.set(__self__, "organization", organization)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def organization(self) -> str:
        return pulumi.get(self, "organization")

    @property
    @pulumi.getter
    def regions(self) -> Sequence['outputs.GetOrganizationRegionsRegionResult']:
        return pulumi.get(self, "regions")


class AwaitableGetOrganizationRegionsResult(GetOrganizationRegionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationRegionsResult(
            id=self.id,
            organization=self.organization,
            regions=self.regions)


def get_organization_regions(organization: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationRegionsResult:
    """
    A list of PlanetScale regions for the organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_planetscale as planetscale

    example = planetscale.get_organization_regions(organization="example")
    pulumi.export("orgRegions", example)
    ```
    """
    __args__ = dict()
    __args__['organization'] = organization
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('planetscale:index/getOrganizationRegions:getOrganizationRegions', __args__, opts=opts, typ=GetOrganizationRegionsResult).value

    return AwaitableGetOrganizationRegionsResult(
        id=pulumi.get(__ret__, 'id'),
        organization=pulumi.get(__ret__, 'organization'),
        regions=pulumi.get(__ret__, 'regions'))
def get_organization_regions_output(organization: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOrganizationRegionsResult]:
    """
    A list of PlanetScale regions for the organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_planetscale as planetscale

    example = planetscale.get_organization_regions(organization="example")
    pulumi.export("orgRegions", example)
    ```
    """
    __args__ = dict()
    __args__['organization'] = organization
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('planetscale:index/getOrganizationRegions:getOrganizationRegions', __args__, opts=opts, typ=GetOrganizationRegionsResult)
    return __ret__.apply(lambda __response__: GetOrganizationRegionsResult(
        id=pulumi.get(__response__, 'id'),
        organization=pulumi.get(__response__, 'organization'),
        regions=pulumi.get(__response__, 'regions')))
