// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package planetscale

import (
	"context"
	"reflect"

	"github.com/imxeno/pulumi-planetscale/sdk/go/planetscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A list of PlanetScale branches.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/imxeno/pulumi-planetscale/sdk/go/planetscale"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := planetscale.GetBranches(ctx, &planetscale.GetBranchesArgs{
//				Organization: "example.com",
//				Database:     "example_db",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("branches", example)
//			return nil
//		})
//	}
//
// ```
func GetBranches(ctx *pulumi.Context, args *GetBranchesArgs, opts ...pulumi.InvokeOption) (*GetBranchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBranchesResult
	err := ctx.Invoke("planetscale:index/getBranches:getBranches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBranches.
type GetBranchesArgs struct {
	Database     string `pulumi:"database"`
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getBranches.
type GetBranchesResult struct {
	Branches []GetBranchesBranch `pulumi:"branches"`
	Database string              `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Organization string `pulumi:"organization"`
}

func GetBranchesOutput(ctx *pulumi.Context, args GetBranchesOutputArgs, opts ...pulumi.InvokeOption) GetBranchesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBranchesResultOutput, error) {
			args := v.(GetBranchesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("planetscale:index/getBranches:getBranches", args, GetBranchesResultOutput{}, options).(GetBranchesResultOutput), nil
		}).(GetBranchesResultOutput)
}

// A collection of arguments for invoking getBranches.
type GetBranchesOutputArgs struct {
	Database     pulumi.StringInput `pulumi:"database"`
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (GetBranchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBranchesArgs)(nil)).Elem()
}

// A collection of values returned by getBranches.
type GetBranchesResultOutput struct{ *pulumi.OutputState }

func (GetBranchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBranchesResult)(nil)).Elem()
}

func (o GetBranchesResultOutput) ToGetBranchesResultOutput() GetBranchesResultOutput {
	return o
}

func (o GetBranchesResultOutput) ToGetBranchesResultOutputWithContext(ctx context.Context) GetBranchesResultOutput {
	return o
}

func (o GetBranchesResultOutput) Branches() GetBranchesBranchArrayOutput {
	return o.ApplyT(func(v GetBranchesResult) []GetBranchesBranch { return v.Branches }).(GetBranchesBranchArrayOutput)
}

func (o GetBranchesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchesResult) string { return v.Database }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBranchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBranchesResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchesResult) string { return v.Organization }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBranchesResultOutput{})
}
